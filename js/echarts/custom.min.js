
function init_echarts(){
// start echarts
if("undefined"!=typeof echarts){console.log("init_echarts");var a={color:["#4ca0c6","#34495E","#BDC3C7","#3498DB","#9B59B6","#8abb6f","#759c6a","#bfd3b7"],title:{itemGap:8,textStyle:{fontWeight:"normal",color:"#408829"}},dataRange:{color:["#1f610a","#97b58d"]},toolbox:{color:["#408829","#408829","#408829","#408829"]},tooltip:{backgroundColor:"rgba(0,0,0,0.5)",axisPointer:{type:"line",lineStyle:{color:"#408829",type:"dashed"},crossStyle:{color:"#408829"},shadowStyle:{color:"rgba(200,200,200,0.3)"}}},dataZoom:{dataBackgroundColor:"#eee",fillerColor:"rgba(64,136,41,0.2)",handleColor:"#408829"},grid:{borderWidth:0},categoryAxis:{axisLine:{lineStyle:{color:"#408829"}},splitLine:{lineStyle:{color:["#eee"]}}},valueAxis:{axisLine:{lineStyle:{color:"#408829"}},splitArea:{show:!0,areaStyle:{color:["rgba(250,250,250,0.1)","rgba(200,200,200,0.1)"]}},splitLine:{lineStyle:{color:["#eee"]}}},timeline:{lineStyle:{color:"#408829"},controlStyle:{normal:{color:"#408829"},emphasis:{color:"#408829"}}},k:{itemStyle:{normal:{color:"#68a54a",color0:"#a9cba2",lineStyle:{width:1,color:"#408829",color0:"#86b379"}}}},map:{itemStyle:{normal:{areaStyle:{color:"#ddd"},label:{textStyle:{color:"#c12e34"}}},emphasis:{areaStyle:{color:"#99d2dd"},label:{textStyle:{color:"#c12e34"}}}}},force:{itemStyle:{normal:{linkStyle:{strokeColor:"#408829"}}}},chord:{padding:4,itemStyle:{normal:{lineStyle:{width:1,color:"rgba(128, 128, 128, 0.5)"},chordStyle:{lineStyle:{width:1,color:"rgba(128, 128, 128, 0.5)"}}},emphasis:{lineStyle:{width:1,color:"rgba(128, 128, 128, 0.5)"},chordStyle:{lineStyle:{width:1,color:"rgba(128, 128, 128, 0.5)"}}}}},gauge:{startAngle:225,endAngle:-45,axisLine:{show:!0,lineStyle:{color:[[.2,"#86b379"],[.8,"#68a54a"],[1,"#408829"]],width:8}},axisTick:{splitNumber:10,length:12,lineStyle:{color:"auto"}},axisLabel:{textStyle:{color:"auto"}},splitLine:{length:18,lineStyle:{color:"auto"}},pointer:{length:"90%",color:"auto"},title:{textStyle:{color:"#333"}},detail:{textStyle:{color:"auto"}}},textStyle:{fontFamily:"Arial, Verdana, sans-serif"}};

d3.csv("data/rcon.csv").then(function(data) {
   var cleandata = data.map(function(d) {
    var cleanD = {};
    d3.keys(d).forEach(function(k) {
      cleanD[_.trim(k)] = _.trim(d[k]);
    });
    return cleanD;
  });


if($("#rcon_chart").length){

  //console.log(cleandata);
   
     var numberproj = d3.nest()
  .key(function(d) { return d.Year  })
  .key(function(d) { return d.GrantCycle; })
    .rollup(function(v) { return {
    count: v.length,
    totalamt: d3.sum(v, function(d) { return d.amount; })    
  }; })
  .entries(cleandata);
  
   dat3 = JSON.stringify(numberproj.sort(function(x, y){
   return d3.ascending(x.key, y.key);
}) );
  var parsedData = JSON.parse(dat3);
   //console.log(parsedData); 
  var yearq = [];
   var countsq = [];
   var total_amt = [];
   for(let i = 0, l = parsedData.length; i < l; i++) {
    if(parsedData[i].values.length > 1) {
yearq.push(parsedData[i].key + " "+parsedData[i].values[0].key );
yearq.push(parsedData[i].key + " " + parsedData[i].values[1].key);
} else {
yearq.push(parsedData[i].key + " "+parsedData[i].values[0].key)
}
 
 if(parsedData[i].values.length > 1) {
 countsq.push(parsedData[i].values[0].value.count);
 countsq.push(parsedData[i].values[1].value.count);
   total_amt.push(parsedData[i].values[0].value.totalamt);
 total_amt.push(parsedData[i].values[1].value.totalamt);
} else {
 countsq.push(parsedData[i].values[0].value.count);
  total_amt.push(parsedData[i].values[0].value.totalamt);
}
     }  
 // console.log(yearq);
  // console.log(countsq);
 //  console.log(total_amt);


var f=echarts.init(document.getElementById("rcon_chart"),a);f.setOption({title:{text:"RConsortium",subtext:"Grant-Cycle Spending on Projects"},tooltip:{trigger:"axis"},legend:{x:220,y:40,data:["Total Funding, USD","Number of Projects"]},toolbox:{show:!0,feature:{magicType:{show:!0,title:{line:"Line",bar:"Bar"},type:["line","bar"]},restore:{show:!0,title:"Restore"},saveAsImage:{show:!0,title:"Save Image"}}},calculable:!0,xAxis:[{type:"category",boundaryGap:!1,data: yearq }],yAxis:[{type:"value"}],series:[{name:"Total Funding, USD",type:"line",smooth:!1,itemStyle:{normal:{areaStyle:{type:"default"}}},data:total_amt},{name:"Number of Projects",type:"line",smooth:!1,itemStyle:{normal:{areaStyle:{type:"default"}}},data: countsq }]})

}

if($("#echart_pie2").length){

   
   var numberproj = d3.nest()
  .key(function(d) { return d.WorkProduct  })
 
  .rollup(function(v) { return v.length;  })
  .entries(cleandata);
  
   dat3 = JSON.stringify(numberproj).replace(/key/g, 'name');
  
   var parsedData = JSON.parse(dat3);
   //console.log(parsedData)
  var wkprd = [];
   
   for(let i = 0, l = parsedData.length; i < l; i++) {
    wkprd.push(parsedData[i].name);
   }  
  // console.log(wkprd);
  // console.log(countsw); 


var h=echarts.init(document.getElementById("echart_pie2"),a);h.setOption({tooltip:{trigger:"item",formatter:"{a} <br/>{b} : {c} ({d}%)"},legend:{x:"center",y:"bottom",data: wkprd },toolbox:{show:!0,feature:{magicType:{show:!0,type:["pie","funnel"]},restore:{show:!0,title:"Restore"},saveAsImage:{show:!0,title:"Save Image"}}},calculable:!0,series:[{name:"Number of Projects",type:"pie",radius:[45,150],center:["50%",170],x:"50%",max:40,sort:"ascending",data: JSON.parse(dat3) }]})


}


if($("#echart_pie").length){

   
   var numberproj = d3.nest()
  .key(function(d) { return d.WorkProduct  })
 
  .rollup(function(v) { return d3.sum(v, function(d) { return d.amount; }) })
  .entries(cleandata);
  
   dat4 = JSON.stringify(numberproj).replace(/key/g, 'name');
  
   var parsedData = JSON.parse(dat4);
   //console.log(parsedData)
  var wkprd = [];
   
   for(let i = 0, l = parsedData.length; i < l; i++) {
    wkprd.push(parsedData[i].name);
   }  
  // console.log(wkprd);
  // console.log(countsw); 

var j=echarts.init(document.getElementById("echart_pie"),a);j.setOption({tooltip:{trigger:"item",formatter:"{a} <br/>{b} : {c} ({d}%)"},legend:{x:"center",y:"bottom",data: wkprd },toolbox:{show:!0,feature:{magicType:{show:!0,type:["pie","funnel"],option:{funnel:{x:"25%",width:"50%",funnelAlign:"left",max:1548}}},restore:{show:!0,title:"Restore"},saveAsImage:{show:!0,title:"Save Image"}}},calculable:!0,series:[{name:"Amount in USD",type:"pie",radius:[45,150],center:["50%","48%"],data:JSON.parse(dat4) }]});
var k={normal:{label:{show:!1},labelLine:{show:!1}}},l={normal:{color:"rgba(0,0,0,0)",label:{show:!1},labelLine:{show:!1}},emphasis:{color:"rgba(0,0,0,0)"}}

}

if($("#echart_pie_fundlevel").length){

  
    var amt = d3.nest()
  .key(function(d) { return d.amount })
    .rollup(function(v) { return v.length  })
  .entries(cleandata);
  
  var amt2 = JSON.stringify(amt);
  var parsedData = JSON.parse(amt2);
  
   var less10k = 0;
   var less20k = 0;
   var less30k = 0;
   var above30k = 0;
    for(let i = 0, l = parsedData.length; i < l; i++) {
       if(parseInt(parsedData[i].key) <= 10000){
  less10k += parsedData[i].value; 
}
      if(parseInt(parsedData[i].key) > 10000 && parseInt(parsedData[i].key) <= 20000){
   less20k += parsedData[i].value 
}

       if(parseInt(parsedData[i].key) > 20000 && parseInt(parsedData[i].key) <= 30000){
   less30k += parsedData[i].value 
}
     
      if(parseInt(parsedData[i].key) > 30000){
   above30k += parsedData[i].value 
}
      
    }
   //console.log(less10k);
   //console.log(less20k);
   //console.log(less30k);
   //console.log(above30k);

var j=echarts.init(document.getElementById("echart_pie_fundlevel"),a);j.setOption({title:{text:"Project Distribution",subtext:"Across Funding Levels"},color:['#4ca0c6','#6e7074', '#546570', '#c4ccd3'], tooltip:{trigger:"item",formatter:"{a} <br/>{b} : {c} ({d}%)"},legend:{x:"center",y:"bottom",data:["$10k Below","$10k - $20k","$20k - $30k","Above $30k"]},toolbox:{show:!0,feature:{magicType:{show:!0,type:["pie","funnel"],option:{funnel:{x:"25%",width:"50%",funnelAlign:"left",max:1548}}},restore:{show:!0,title:"Restore"},saveAsImage:{show:!0,title:"Save Image"}}},calculable:!0,series:[{name:"Number of Projects",type:"pie",radius:[50,140],center:["54%",178],x:"45%",max:40, data:[{value:less10k, name:"$10k Below"},{value:less20k,name:"$10k - $20k"},{value:less30k,name:"$20k - $30k"},{value:above30k,name:"Above $30k"}]}]});var k={normal:{label:{show:!1},labelLine:{show:!1}}},l={normal:{color:"rgba(0,0,0,0)",label:{show:!1},labelLine:{show:!1}},emphasis:{color:"rgba(0,0,0,0)"}}

var less10k = 0;
   var less20k = 0;
   var less30k = 0;
   var above30k = 0;

for(let i = 0, l = parsedData.length; i < l; i++) {
       if(parseInt(parsedData[i].key) <= 10000){
  less10k += parseInt(parsedData[i].key) * parsedData[i].value; 
}
      if(parseInt(parsedData[i].key) > 10000 && parseInt(parsedData[i].key) <= 20000){
   less20k += parseInt(parsedData[i].key) * parsedData[i].value; 
}

       if(parseInt(parsedData[i].key) > 20000 && parseInt(parsedData[i].key) <= 30000){
   less30k += parseInt(parsedData[i].key) * parsedData[i].value; 
}
     
      if(parseInt(parsedData[i].key) > 30000){
   above30k += parseInt(parsedData[i].key) * parsedData[i].value; 
}
      
  }

var j2=echarts.init(document.getElementById("echart_pie_fundlevel2"),a);j2.setOption({title:{text:"Funds Distribution",subtext:"Across Funding Levels"},color:[  "#4ca0c6",'#bda29a','#6e7074', '#546570', '#c4ccd3'],tooltip:{trigger:"item",formatter:"{a} <br/>{b} : {c} ({d}%)"},legend:{x:"center",y:"bottom",data:["$10k Below","$10k - $20k","$20k - $30k","Above $30k"]},toolbox:{show:!0,feature:{magicType:{show:!0,type:["pie","funnel"],option:{funnel:{x:"25%",width:"50%",funnelAlign:"left",max:1548}}},restore:{show:!0,title:"Restore"},saveAsImage:{show:!0,title:"Save Image"}}},calculable:!0,series:[{name:"Cumulative Amount USD",type:"pie",radius:[45,150],center:["50%","48%"],data:[{value:less10k, name:"$10k Below"},{value:less20k,name:"$10k - $20k"},{value:less30k,name:"$20k - $30k"},{value:above30k,name:"Above $30k"}]}]});var k={normal:{label:{show:!1},labelLine:{show:!1}}},l={normal:{color:"rgba(0,0,0,0)",label:{show:!1},labelLine:{show:!1}},emphasis:{color:"rgba(0,0,0,0)"}}

}


if($("#echart_pie_q").length){
   
   var numberproj = d3.nest()
  .key(function(d) { return d.GrantCycle;  })
  .rollup(function(v) { return v.length;  })
  .entries(cleandata);
  
   dat5 = JSON.stringify(numberproj).replace(/key/g, 'name');
  var parsedData = JSON.parse(dat5);
   //console.log(parsedData)
  var quarter = [];
   
   for(let i = 0, l = parsedData.length; i < l; i++) {
    quarter.push(parsedData[i].name);
    
   }  
   //console.log(quarter);
var h=echarts.init(document.getElementById("echart_pie_q"),a);h.setOption({title:{text:"All Grant Cycles",subtext:"Grouped By Count of Funded Projects"},tooltip:{trigger:"item",formatter:"{a} <br/>{b} : {c} ({d}%)"},legend:{x:"center",y:"bottom",data: quarter },toolbox:{show:!0,feature:{magicType:{show:!0,type:["pie","funnel"]},restore:{show:!0,title:"Restore"},saveAsImage:{show:!0,title:"Save Image"}}},calculable:!0,series:[{name:"Number of Projects",type:"pie",radius:[35,130],center:["50%",175],roseType:"area",x:"50%",max:40,sort:"ascending",data: JSON.parse(dat5) }]})

}


if($("#status_chart2").length){

  var stat2 = d3.nest()
  .key(function(d) { return d.Year  })
  .key(function(d) { return d.status }) 
    .rollup(function(v) { return  v.length })
    .entries(cleandata)
   .map(function (obj) {
           if (obj.values.length === 1) {
               if (obj.values[0].key == "Completed") {
                   obj.values.unshift({ key: "Ongoing", value: 0 });
               } else {
                   obj.values.push({ key: "Completed", value: 0 });
               }
           }
           return obj;
      });
  
    
      
  var status2 = JSON.stringify(stat2.sort(function(x, y){
   return d3.ascending(x.key, y.key);
}) );
  var parsedData22 = JSON.parse(status2);
  var years2 = [];
   var ongoing = [];
  var completed = [];
   for(let i = 0, l = parsedData22.length; i < l; i++) {
      years2.push(parsedData22[i].key);
     ongoing.push(parsedData22[i].values[0].value);
     completed.push(parsedData22[i].values[1].value);
   }
  
var total = [];
for (var i=0; i < ongoing.length; i++) {
  total.push(ongoing[i] + completed[i]);
}

var fs23=echarts.init(document.getElementById("status_chart2"), a);fs23.setOption({title:{text:"RConsortium",subtext:"Yearly Status on Projects"},tooltip:{trigger:"axis"},legend:{x:220,y:40,data:["Total Projects","Completed Projects","Ongoing Projects"]},toolbox:{show:!0,feature:{magicType:{show:!0,title:{line:"Line",bar:"Bar"},type:["line","bar"]},restore:{show:!0,title:"Restore"},saveAsImage:{show:!0,title:"Save Image"}}},calculable:!0,xAxis:[{type:"category",data: years2}],yAxis:[{type:"value"}],series:[{name:"Total Projects",type:"bar",smooth:!0,itemStyle:{normal:{areaStyle:{type:"default"}}},data:total}, {name:"Completed Projects",type:"bar",smooth:!0,itemStyle:{normal:{areaStyle:{type:"default"}}},data:completed},{name:"Ongoing Projects",type:"bar",smooth:!0,itemStyle:{normal:{areaStyle:{type:"default"}}},data: ongoing }]})

}


if($("#rcon_chart2").length){
   
   var numberproj = d3.nest()
  .key(function(d) { return d.Year  })
  .rollup(function(v) { return v.length;  })
  .entries(cleandata);
   
// stringify grouped data and sort based on key, i.e years starting from 2015 upwards
   dat3 = JSON.stringify(numberproj.sort(function(x, y){
   return d3.ascending(x.key, y.key);
}) );
  var parsedData = JSON.parse(dat3);
   var years = [];
   var counts = [];
   for(let i = 0, l = parsedData.length; i < l; i++) {
      years.push(parsedData[i].key)
     counts.push(parsedData[i].value)
   }


// group data by year and sum of amounts for each year
var amounts = d3.nest()
  .key(function(d) { return d.Year  })
  .rollup(function(v) { return d3.sum(v, function(d) { return d.amount; })  })
  .entries(cleandata);
   
   dat4 = JSON.stringify(amounts.sort(function(x, y){
   return d3.ascending(x.key, y.key);
}) );
var year_amt = [];
  var parsedAmt = JSON.parse(dat4);
   //console.log(parsedAmt);
for(let i = 0, l = parsedAmt.length; i < l; i++) {
       year_amt.push(parsedAmt[i].value)
   }


//year_arr = years.reverse();
//numprj = counts.reverse();
//console.log(years);
//console.log(year_amt);

var f=echarts.init(document.getElementById("rcon_chart2"),a);f.setOption({title:{text:"RConsortium",subtext:"Number of Projects Per Year"},tooltip:{trigger:"axis"},toolbox:{show:!0,feature:{magicType:{show:!0,title:{line:"Line",bar:"Bar"},type:["line","bar"]},restore:{show:!0,title:"Restore"},saveAsImage:{show:!0,title:"Save Image"}}},calculable:!0,xAxis:[{type:"category",boundaryGap:!1,data: years}],yAxis:[{type:"value"}],series:[{name:"Number of Projects",type:"bar",smooth:!1,itemStyle:{normal:{areaStyle:{type:"default"}}},data:counts}]})



var stat = d3.nest()
  .key(function(d) { return d.status })
    .rollup(function(v) { return  v.length })
  .entries(cleandata);
  
  var status = JSON.stringify(stat);
  var parsedData2 = JSON.parse(status);
 // console.log(parsedData2);
   
  var staty = [];
   var countsy = [];
   
    
  
    for(let i = 0, l = parsedData2.length; i < l; i++) {   
  staty.push(parsedData2[i].key)
    countsy.push(parsedData2[i].value) 
    
    }
   //console.log(staty);
   //console.log(countsy);

var ft=echarts.init(document.getElementById("status_chart"),a);
ft.setOption({title:{text:"",subtext:"Number of Projects"},tooltip:{trigger:"axis"},legend:{data:["Number of Projects"]},toolbox:{show:!0,feature:{magicType:{show:!1,title:{line:"Line",bar:"Bar"},type:["line","bar"]},restore:{show:!0,title:"Restore"},saveAsImage:{show:!0,title:"Save Image"}}},calculable:!0,xAxis:[{type:"category",data: staty}],yAxis:[{type:"value"}],series:[{name:"Number of Projects",type:"bar",data:countsy }]})
}

}); // first d3.csv call

  }
}
!function(a,b){var c=function(a,b,c){var d;return function(){function h(){c||a.apply(f,g),d=null}var f=this,g=arguments;d?clearTimeout(d):c&&a.apply(f,g),d=setTimeout(h,b||100)}};jQuery.fn[b]=function(a){return a?this.bind("resize",c(a)):this.trigger(b)}}(jQuery,"smartresize");var CURRENT_URL=window.location.href.split("#")[0].split("?")[0],$BODY=$("body"),$MENU_TOGGLE=$("#menu_toggle"),$SIDEBAR_MENU=$("#sidebar-menu"),$SIDEBAR_FOOTER=$(".sidebar-footer"),$LEFT_COL=$(".left_col"),$RIGHT_COL=$(".right_col"),$NAV_MENU=$(".nav_menu"),$FOOTER=$("footer"),randNum=function(){return Math.floor(21*Math.random())+20};$(document).ready(function(){$(".collapse-link").on("click",function(){var a=$(this).closest(".x_panel"),b=$(this).find("i"),c=a.find(".x_content");a.attr("style")?c.slideToggle(200,function(){a.removeAttr("style")}):(c.slideToggle(200),a.css("height","auto")),b.toggleClass("fa-chevron-up fa-chevron-down")}),$(".close-link").click(function(){var a=$(this).closest(".x_panel");a.remove()})}),$(document).ready(function(){$('[data-toggle="tooltip"]').tooltip({container:"body"})}),$(".progress .progress-bar")[0]&&$(".progress .progress-bar").progressbar(),$(document).ready(function(){if($(".js-switch")[0]){var a=Array.prototype.slice.call(document.querySelectorAll(".js-switch"));a.forEach(function(a){new Switchery(a,{color:"#26B99A"})})}}),$(document).ready(function(){$("input.flat")[0]&&$(document).ready(function(){$("input.flat").iCheck({checkboxClass:"icheckbox_flat-green",radioClass:"iradio_flat-green"})})}),$("table input").on("ifChecked",function(){checkState="",$(this).parent().parent().parent().addClass("selected"),countChecked()}),$("table input").on("ifUnchecked",function(){checkState="",$(this).parent().parent().parent().removeClass("selected"),countChecked()});var checkState="";$(".bulk_action input").on("ifChecked",function(){checkState="",$(this).parent().parent().parent().addClass("selected"),countChecked()}),$(".bulk_action input").on("ifUnchecked",function(){checkState="",$(this).parent().parent().parent().removeClass("selected"),countChecked()}),$(".bulk_action input#check-all").on("ifChecked",function(){checkState="all",countChecked()}),$(".bulk_action input#check-all").on("ifUnchecked",function(){checkState="none",countChecked()}),$(document).ready(function(){$(".expand").on("click",function(){$(this).next().slideToggle(200),$expand=$(this).find(">:first-child"),"+"==$expand.text()?$expand.text("-"):$expand.text("+")})}),"undefined"!=typeof NProgress&&($(document).ready(function(){NProgress.start()}),$(window).load(function(){NProgress.done()}));var originalLeave=$.fn.popover.Constructor.prototype.leave;$.fn.popover.Constructor.prototype.leave=function(a){var c,d,b=a instanceof this.constructor?a:$(a.currentTarget)[this.type](this.getDelegateOptions()).data("bs."+this.type);originalLeave.call(this,a),a.currentTarget&&(c=$(a.currentTarget).siblings(".popover"),d=b.timeout,c.one("mouseenter",function(){clearTimeout(d),c.one("mouseleave",function(){$.fn.popover.Constructor.prototype.leave.call(b,b)})}))},$("body").popover({selector:"[data-popover]",trigger:"click hover",delay:{show:50,hide:400}}),$(document).ready(function(){init_echarts()});
